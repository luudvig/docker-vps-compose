services:
  certbot:
    command: renew --standalone
    image: certbot/certbot:latest
    ports:
      - "80:80"
    profiles:
      - disabled
    volumes:
      - ./data-certbot:/etc/letsencrypt:Z

  db:
    environment:
      - MYSQL_ROOT_PASSWORD
    image: mysql:8.0
    restart: always
    volumes:
      - ./data-db:/var/lib/mysql:Z

  files:
    hostname: ${COMPOSE_PROJECT_NAME}
    image: syncthing/syncthing:latest
    ports:
      - "8384:8384"
      - "${SYNCTHING_PORT:?err}:22000"
    restart: always
    volumes:
      - ./data-files:/var/syncthing:z

  proxy:
    depends_on:
      - site
    environment:
      - NGINX_PORT_SSL
    image: nginx:stable
    ports:
      - "${NGINX_PORT:?err}:80"
      - "${NGINX_PORT_SSL:?err}:443"
    restart: always
    volumes:
      - ./secrets/fullchain.pem:/run/secrets/ssl_certificate:ro,Z
      - ./secrets/privkey.pem:/run/secrets/ssl_certificate_key:ro,Z
      - ./templates:/etc/nginx/templates:ro,Z

  rclone:
    command: >
      -c "rclone copy $(find -not -path '*/.*' -name '*.kdbx' -type f) remote:;
          apk add --no-cache gnupg &&
          tar --create --file /tmp/Files.tar [!config]* &&
          gpg --batch --cipher-algo AES256 --output /tmp/Files.tar.gpg --passphrase-file /config/rclone/gpg_passphrase.txt --symmetric /tmp/Files.tar &&
          rclone copy /tmp/Files.tar.gpg remote:"
    entrypoint: sh
    image: rclone/rclone:latest
    profiles:
      - disabled
    volumes:
      - ./data-files:/data:ro,z
      - ./data-rclone:/config/rclone:Z

  site:
    depends_on:
      - db
    environment:
      - database__connection__host=db
      - database__connection__password=${MYSQL_ROOT_PASSWORD:?err}
      - url=https://${GHOST_PUBLIC_URL:?err}:${NGINX_PORT_SSL:?err}
    image: ghost:5
    restart: always
    volumes:
      - ./data-site:/var/lib/ghost/content:Z
